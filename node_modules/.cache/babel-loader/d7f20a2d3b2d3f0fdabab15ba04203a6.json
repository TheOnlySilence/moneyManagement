{"ast":null,"code":"import _objectSpread from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geesun/Desktop/mm-app/src/tr_table.js\";\nimport React, { Component } from 'react';\nimport './tr_table.css';\nimport ReactDataGrid from 'react-data-grid';\nvar columns = [{\n  key: \"id\",\n  name: \"ID\",\n  editable: true\n}, {\n  key: \"title\",\n  name: \"Title\",\n  editable: true\n}, {\n  key: \"complete\",\n  name: \"Complete\",\n  editable: true\n}];\nvar rows = [{\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}];\n\nvar Table_sample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table_sample, _Component);\n\n  function Table_sample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table_sample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table_sample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rows: rows\n    };\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      _this.setState(function (state) {\n        var rows = state.rows.slice();\n\n        for (var i = fromRow; i <= toRow; i++) {\n          rows[i] = _objectSpread({}, rows[i], updated);\n        }\n\n        return {\n          rows: rows\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Table_sample, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ReactDataGrid, {\n        columns: columns,\n        rowGetter: function rowGetter(i) {\n          return _this2.state.rows[i];\n        },\n        rowsCount: 3,\n        onGridRowsUpdated: this.onGridRowsUpdated,\n        enableCellSelect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Table_sample;\n}(Component);\n\nexport default Table_sample; // Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this3.state = {\n      data: makeData()\n    };\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        data: data,\n        columns: [{\n          Header: \"Name\",\n          columns: [{\n            Header: \"First Name (Sorted by Length, A-Z)\",\n            accessor: \"firstName\",\n            sortMethod: function sortMethod(a, b) {\n              if (a.length === b.length) {\n                return a > b ? 1 : -1;\n              }\n\n              return a.length > b.length ? 1 : -1;\n            }\n          }, {\n            Header: \"Last Name (Sorted in reverse, A-Z)\",\n            id: \"lastName\",\n            accessor: function accessor(d) {\n              return d.lastName;\n            },\n            sortMethod: function sortMethod(a, b) {\n              if (a === b) {\n                return 0;\n              }\n\n              var aReverse = a.split(\"\").reverse().join(\"\");\n              var bReverse = b.split(\"\").reverse().join(\"\");\n              return aReverse > bReverse ? 1 : -1;\n            }\n          }]\n        }, {\n          Header: \"Info\",\n          columns: [{\n            Header: \"Age\",\n            accessor: \"age\"\n          }]\n        }],\n        defaultPageSize: 10,\n        className: \"-striped -highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Tips, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/geesun/Desktop/mm-app/src/tr_table.js"],"names":["React","Component","ReactDataGrid","columns","key","name","editable","rows","id","title","complete","Table_sample","state","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","ReactTable","App","data","makeData","Header","accessor","sortMethod","a","b","length","d","lastName","aReverse","split","reverse","join","bReverse","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './tr_table.css';\nimport ReactDataGrid from 'react-data-grid'\n\n\nconst columns = [\n    { key: \"id\", name: \"ID\", editable: true },\n    { key: \"title\", name: \"Title\", editable: true },\n    { key: \"complete\", name: \"Complete\", editable: true }\n  ];\n  \n  const rows = [\n    { id: 0, title: \"Task 1\", complete: 20 },\n    { id: 1, title: \"Task 2\", complete: 40 },\n    { id: 2, title: \"Task 3\", complete: 60 }\n  ];\n\nclass Table_sample extends Component{\n\n    state = { rows };\n\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n    this.setState(state => {\n      const rows = state.rows.slice();\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i], ...updated };\n      }\n      return { rows };\n    });\n  };\n  render() {\n    return (\n      <ReactDataGrid\n        columns={columns}\n        rowGetter={i => this.state.rows[i]}\n        rowsCount={3}\n        onGridRowsUpdated={this.onGridRowsUpdated}\n        enableCellSelect={true}\n      />\n    );\n  }\n}\n\nexport default Table_sample;\n\n\n\n\n\n\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: makeData()\n    };\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              Header: \"Name\",\n              columns: [\n                {\n                  Header: \"First Name (Sorted by Length, A-Z)\",\n                  accessor: \"firstName\",\n                  sortMethod: (a, b) => {\n                    if (a.length === b.length) {\n                      return a > b ? 1 : -1;\n                    }\n                    return a.length > b.length ? 1 : -1;\n                  }\n                },\n                {\n                  Header: \"Last Name (Sorted in reverse, A-Z)\",\n                  id: \"lastName\",\n                  accessor: d => d.lastName,\n                  sortMethod: (a, b) => {\n                    if (a === b) {\n                      return 0;\n                    }\n                    const aReverse = a.split(\"\").reverse().join(\"\");\n                    const bReverse = b.split(\"\").reverse().join(\"\");\n                    return aReverse > bReverse ? 1 : -1;\n                  }\n                }\n              ]\n            },\n            {\n              Header: \"Info\",\n              columns: [\n                {\n                  Header: \"Age\",\n                  accessor: \"age\"\n                }\n              ]\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n        <br />\n        <Tips />\n        <Logo />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}