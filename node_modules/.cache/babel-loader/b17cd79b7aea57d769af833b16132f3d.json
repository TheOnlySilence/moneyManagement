{"ast":null,"code":"import _classCallCheck from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geesun/Desktop/mm-app/src/mm_content.js\";\nimport React, { Component } from 'react';\nimport './mm_content.css';\nvar chartOptions = {\n  //Boolean - Whether we should show a stroke on each segment\n  segmentShowStroke: true,\n  //String - The colour of each segment stroke\n  segmentStrokeColor: \"#fff\",\n  //Number - The width of each segment stroke\n  segmentStrokeWidth: 2,\n  //Number - The percentage of the chart that we cut out of the middle\n  percentageInnerCutout: 50,\n  // This is 0 for Pie charts\n  //Number - Amount of animation steps\n  animationSteps: 100,\n  //String - Animation easing effect\n  animationEasing: \"easeOutBounce\",\n  //Boolean - Whether we animate the rotation of the Doughnut\n  animateRotate: true,\n  //Boolean - Whether we animate scaling the Doughnut from the centre\n  animateScale: true,\n  //String - A legend template\n  legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n};\n\nvar Content =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Content, _Component);\n\n  function Content() {\n    _classCallCheck(this, Content);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Content).apply(this, arguments));\n  }\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"_content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"_content_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Financial Analysis\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"23:14, Thursday, Jan 26, 2019\")), React.createElement(Graph_spending, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nvar Graph_spending =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Graph_spending, _Component2);\n\n  function Graph_spending() {\n    _classCallCheck(this, Graph_spending);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Graph_spending).apply(this, arguments));\n  }\n\n  _createClass(Graph_spending, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"this is a graph\");\n    }\n  }]);\n\n  return Graph_spending;\n}(Component);\n\nvar Pie_spending =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Pie_spending, _Component3);\n\n  function Pie_spending() {\n    _classCallCheck(this, Pie_spending);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pie_spending).apply(this, arguments));\n  }\n\n  _createClass(Pie_spending, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"this is a pie chart\");\n    }\n  }]);\n\n  return Pie_spending;\n}(Component);\n\nexport default Content;","map":{"version":3,"sources":["/Users/geesun/Desktop/mm-app/src/mm_content.js"],"names":["React","Component","chartOptions","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animationSteps","animationEasing","animateRotate","animateScale","legendTemplate","Content","Graph_spending","Pie_spending"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AAGA,IAAMC,YAAY,GAAG;AACpB;AACAC,EAAAA,iBAAiB,EAAG,IAFA;AAIpB;AACAC,EAAAA,kBAAkB,EAAG,MALD;AAOpB;AACAC,EAAAA,kBAAkB,EAAG,CARD;AAUpB;AACAC,EAAAA,qBAAqB,EAAG,EAXJ;AAWQ;AAE5B;AACAC,EAAAA,cAAc,EAAG,GAdG;AAgBpB;AACAC,EAAAA,eAAe,EAAG,eAjBE;AAmBpB;AACAC,EAAAA,aAAa,EAAG,IApBI;AAsBpB;AACAC,EAAAA,YAAY,EAAG,IAvBK;AAwBpB;AACAC,EAAAA,cAAc,EAAG;AAzBG,CAArB;;IA6BMC,O;;;;;;;;;;;;;6BAGK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,CADF,EAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAUD;;;;EAdmBX,S;;IAiBhBY,c;;;;;;;;;;;;;6BACM;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAGH;;;;EALwBZ,S;;IAQvBa,Y;;;;;;;;;;;;;6BACM;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAGH;;;;EALsBb,S;;AAQ3B,eAAeW,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './mm_content.css';\n\n\nconst chartOptions = {\n\t//Boolean - Whether we should show a stroke on each segment\n\tsegmentShowStroke : true,\n\n\t//String - The colour of each segment stroke\n\tsegmentStrokeColor : \"#fff\",\n\n\t//Number - The width of each segment stroke\n\tsegmentStrokeWidth : 2,\n\n\t//Number - The percentage of the chart that we cut out of the middle\n\tpercentageInnerCutout : 50, // This is 0 for Pie charts\n\n\t//Number - Amount of animation steps\n\tanimationSteps : 100,\n\n\t//String - Animation easing effect\n\tanimationEasing : \"easeOutBounce\",\n\n\t//Boolean - Whether we animate the rotation of the Doughnut\n\tanimateRotate : true,\n\n\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\tanimateScale : true,\n\t//String - A legend template\n\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\t\n}\n\nclass Content extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"_content\">\n        <div className=\"_content_title\">\n            <h2>Financial Analysis</h2>\n            <p>23:14, Thursday, Jan 26, 2019</p>\n        </div>\n        <Graph_spending/>\n       \n      </div>\n    );\n  }\n}\n\nclass Graph_spending extends Component {\n    render(){\n        return(\n            <div>this is a graph</div>\n        )\n    }\n}\n\nclass Pie_spending extends Component {\n    render(){\n        return(\n            <div>this is a pie chart</div>\n        )\n    }\n}\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}