{"ast":null,"code":"import _slicedToArray from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/geesun/Desktop/mm-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/geesun/Desktop/mm-app/src/tr_table.js\";\nimport React, { Component } from 'react';\nimport { useState } from \"react\";\nimport './tr_table.css';\nimport ReactDataGrid from 'react-data-grid';\nvar defaultColumnProperties = {\n  sortable: false,\n  width: 100\n};\nvar columns = [{\n  key: 'Date',\n  name: 'DATE'\n}, {\n  key: 'Time',\n  name: 'TIME'\n}, {\n  key: 'Category',\n  name: 'CATEGORY'\n}, {\n  key: 'Name',\n  name: 'VENDOR'\n}, {\n  key: 'Amount',\n  name: 'AMOUNT'\n}].map(function (c) {\n  return _objectSpread({}, c, defaultColumnProperties);\n});\nvar rows = [{\n  id: 0,\n  title: 'row1',\n  count: 20\n}, {\n  id: 1,\n  title: 'row1',\n  count: 40\n}, {\n  id: 2,\n  title: 'row1',\n  count: 60\n}];\nvar ROW_COUNT = 50;\nvar Transaction_data = [{\n  Date: \"8/20/18\",\n  Time: \"3:14 PM EST\",\n  Category: \"Merchandise\",\n  Name: \"Student Book Store\",\n  Amount: 145.65,\n  Location: \"330 E College Ave, State College, PA 16801\",\n  Payment_Method: \"Card swiped\",\n  sortDecendingFirst: true\n}, {\n  Date: \"8/21/18\",\n  Time: \"1:59 PM EST\",\n  Category: \"Merchandise\",\n  Name: \"Amazon\",\n  Amount: 20.67,\n  Location: \"amazon.com\",\n  Payment_Method: \"Online\"\n}, {\n  Date: \"8/22/18\",\n  Time: \"11:45 AM EST\",\n  Category: \"Dining\",\n  Name: \"Chick-fil-A\",\n  Amount: 11.75,\n  Location: \"1938 N Atherton St, State College, PA 16803\",\n  Payment_Method: \"Card swiped\"\n}, {\n  Date: \"8/22/18\",\n  Time: \"3:01 PM EST\",\n  Category: \"Grocery\",\n  Name: \"Wegmans\",\n  Amount: 105,\n  Location: \"345 Colonnade Blvd, State College, PA 16803\",\n  Payment_Method: \"Chip\"\n}, {\n  Date: \"8/23/18\",\n  Time: \"3:35 PM EST\",\n  Category: \"Merchandise\",\n  Name: \"Fine Wine & Good Spirits\",\n  Amount: 36.14,\n  Location: \"1682 N Atherton St, State College, PA 16803\",\n  Payment_Method: \"Chip\"\n}, {\n  Date: \"8/23/18\",\n  Time: \"3:57 PM EST\",\n  Category: \"Gas/Automotive\",\n  Name: \"Exxon\",\n  Amount: 25,\n  Location: \"315 W Aaron Dr, State College, PA 16801\",\n  Payment_Method: \"Card swiped\"\n}, {\n  Date: \"8/24/18\",\n  Time: \"12:30 AM EST\",\n  Category: \"Dining\",\n  Name: \"Cafe 210 West\",\n  Amount: 13,\n  Location: \"210 W College Ave, State College, PA 16801\",\n  Payment_Method: \"Card swiped\"\n}, {\n  Date: \"8/24/18\",\n  Time: \"1:35 AM EST\",\n  Category: \"Travel\",\n  Name: \"Uber Technologies\",\n  Amount: 7.35,\n  Location: \"Uber\",\n  Payment_Method: \"Apple Pay\"\n}, {\n  Date: \"8/24/18\",\n  Time: \"10:00 AM EST\",\n  Category: \"Healthcare\",\n  Name: \"CVS\",\n  Amount: 13.01,\n  Location: \"138 E Beaver Ave, State College, PA 16801\",\n  Payment_Method: \"Chip\"\n}, {\n  Date: \"8/24/18\",\n  Time: \"7:00 PM EST\",\n  Category: \"Entertainment\",\n  Name: \"The State Theatre\",\n  Amount: 10,\n  Location: \"130 W College Ave, State College, PA 16801\",\n  Payment_Method: \"Chip\"\n}, {\n  Date: \"8/25/18\",\n  Time: \"6:00 AM EST\",\n  Category: \"Insurance\",\n  Name: \"Renters Insurance\",\n  Amount: 30.74,\n  Location: \"progressive.com\",\n  Payment_Method: \"Online\"\n}];\n\nvar sortRows = function sortRows(initialRows, sortColumn, sortDirection) {\n  return function (rows) {\n    var comparer = function comparer(a, b) {\n      if (sortDirection === \"ASC\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === \"DESC\") {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n\n    return sortDirection === \"NONE\" ? initialRows : _toConsumableArray(rows).sort(comparer);\n  };\n};\n\nfunction Table_sample() {\n  return React.createElement(ReactDataGrid, {\n    columns: columns,\n    rowGetter: function rowGetter(i) {\n      return Transaction_data[i];\n    },\n    resizeable: true,\n    rowsCount: 10,\n    minHeight: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  });\n}\n\nfunction Example(_ref) {\n  var initialRows = _ref.initialRows;\n\n  var _useState = useState(initialRows),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  return React.createElement(ReactDataGrid, {\n    columns: columns,\n    rowGetter: function rowGetter(i) {\n      return Transaction_data[i];\n    },\n    rowsCount: ROW_COUNT,\n    minHeight: 100,\n    onGridSort: function onGridSort(sortColumn, sortDirection) {\n      return setRows(sortRows(initialRows, sortColumn, sortDirection));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  });\n}\n\nexport default Table_sample;","map":{"version":3,"sources":["/Users/geesun/Desktop/mm-app/src/tr_table.js"],"names":["React","Component","useState","ReactDataGrid","defaultColumnProperties","sortable","width","columns","key","name","map","c","rows","id","title","count","ROW_COUNT","Transaction_data","Date","Time","Category","Name","Amount","Location","Payment_Method","sortDecendingFirst","sortRows","initialRows","sortColumn","sortDirection","comparer","a","b","sort","Table_sample","i","Example","setRows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  { useState } from \"react\";\nimport './tr_table.css';\nimport ReactDataGrid from 'react-data-grid'\n\nconst defaultColumnProperties = {\n    sortable: false,\n    width: 100\n  };\n\nconst columns = [\n    { key: 'Date', name: 'DATE' },\n    { key: 'Time', name: 'TIME' },\n    { key: 'Category', name: 'CATEGORY' },\n    { key: 'Name', name: 'VENDOR' },\n    { key: 'Amount', name: 'AMOUNT' } ].map(c => ({ ...c, ...defaultColumnProperties }));\n  \n  const rows = [{id: 0, title: 'row1', count: 20}, {id: 1, title: 'row1', count: 40}, {id: 2, title: 'row1', count: 60}];\n  \n  const ROW_COUNT = 50;\n\n  const Transaction_data = [\n    {\n      Date: \"8/20/18\", \n      Time: \"3:14 PM EST\", \n      Category: \"Merchandise\", \n      Name: \"Student Book Store\", \n      Amount: 145.65, \n      Location: \"330 E College Ave, State College, PA 16801\", \n      Payment_Method: \"Card swiped\",\n      sortDecendingFirst: true}, \n    {\n      Date: \"8/21/18\", \n      Time: \"1:59 PM EST\", \n      Category: \"Merchandise\", \n      Name: \"Amazon\", \n      Amount: 20.67, \n      Location: \"amazon.com\", \n      Payment_Method: \"Online\"}, \n    {\n      Date: \"8/22/18\", \n      Time: \"11:45 AM EST\", \n      Category: \"Dining\", \n      Name: \"Chick-fil-A\", \n      Amount: 11.75, \n      Location: \"1938 N Atherton St, State College, PA 16803\", \n      Payment_Method: \"Card swiped\"}, \n    {\n      Date: \"8/22/18\", \n      Time: \"3:01 PM EST\", \n      Category: \"Grocery\", \n      Name: \"Wegmans\", \n      Amount: 105, \n      Location: \"345 Colonnade Blvd, State College, PA 16803\", \n      Payment_Method: \"Chip\"}, \n    {\n      Date: \"8/23/18\", \n      Time: \"3:35 PM EST\", \n      Category: \"Merchandise\", \n      Name: \"Fine Wine & Good Spirits\", \n      Amount: 36.14, \n      Location: \"1682 N Atherton St, State College, PA 16803\", \n      Payment_Method: \"Chip\"}, \n    {\n      Date: \"8/23/18\", \n      Time: \"3:57 PM EST\", \n      Category: \"Gas/Automotive\", \n      Name: \"Exxon\", \n      Amount: 25, \n      Location: \"315 W Aaron Dr, State College, PA 16801\", \n      Payment_Method: \"Card swiped\"}, \n    {\n      Date: \"8/24/18\", \n      Time: \"12:30 AM EST\", \n      Category: \"Dining\", \n      Name: \"Cafe 210 West\", \n      Amount: 13, \n      Location: \"210 W College Ave, State College, PA 16801\", \n      Payment_Method: \"Card swiped\"}, \n    {\n      Date: \"8/24/18\", \n      Time: \"1:35 AM EST\", \n      Category: \"Travel\", \n      Name: \"Uber Technologies\", \n      Amount: 7.35, \n      Location: \"Uber\", \n      Payment_Method: \"Apple Pay\"}, \n    {\n      Date: \"8/24/18\", \n      Time: \"10:00 AM EST\", \n      Category: \"Healthcare\", \n      Name: \"CVS\", \n      Amount: 13.01, \n      Location: \"138 E Beaver Ave, State College, PA 16801\", \n      Payment_Method: \"Chip\"}, \n    {\n      Date: \"8/24/18\", \n      Time: \"7:00 PM EST\", \n      Category: \"Entertainment\", \n      Name: \"The State Theatre\", \n      Amount: 10, \n      Location: \"130 W College Ave, State College, PA 16801\", \n      Payment_Method: \"Chip\"}, \n    {\n      Date: \"8/25/18\", \n      Time: \"6:00 AM EST\", \n      Category: \"Insurance\", \n      Name: \"Renters Insurance\", \n      Amount: 30.74, \n      Location: \"progressive.com\", \n      Payment_Method: \"Online\"}\n    ]\n\n\n    const sortRows = (initialRows, sortColumn, sortDirection) => rows => {\n        const comparer = (a, b) => {\n          if (sortDirection === \"ASC\") {\n            return a[sortColumn] > b[sortColumn] ? 1 : -1;\n          } else if (sortDirection === \"DESC\") {\n            return a[sortColumn] < b[sortColumn] ? 1 : -1;\n          }\n        };\n        return sortDirection === \"NONE\" ? initialRows : [...rows].sort(comparer);\n      };\n\n\n  function Table_sample() {\n    return (<ReactDataGrid\n    columns={columns}\n    rowGetter={i => Transaction_data[i]}\n    resizeable = {true}\n    rowsCount={10}\n    minHeight={250} />);\n  }\n\n  function Example({ initialRows }) {\n    const [rows, setRows] = useState(initialRows);\n    return (\n      <ReactDataGrid\n        columns={columns}\n        rowGetter={i => Transaction_data[i]}\n        rowsCount={ROW_COUNT}\n        minHeight={100}\n        onGridSort={(sortColumn, sortDirection) =>\n          setRows(sortRows(initialRows, sortColumn, sortDirection))\n        }\n      />\n    );\n  }\n\nexport default Table_sample;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}